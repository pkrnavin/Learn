package com.opentest.test.main;

public class TestOverloading {
	
	/* overloading checking 
	 * - two+ functions name same, below 
	 *     - argument type OR number of argument to varies 
	 *     - return type adds, <ABOVE_LINE> 
	 * - able to overload `final` method 
	 * - Override method, text available in `Child` class 
	 */
	
	public void open() {
		System.out.println("open <> 11111");
	}
	
	/* syntax err, number of arguments must varies 
	 * - error occurs, same argument types two functions, return type varies 
	public int open() {
		System.out.println("open <> 2222");
		return 0;
	}*/
	
	public int open(int nValue) {
		System.out.println("open <> 333");
		return 1;
	}
	
	public void open(String strValue) {
		System.out.println("open <> 44444");
	}
	
	/* syntax err, number of arguments must varies 
	public String open(String strValue) {
		System.out.println("open <> 5555");
		return "ABC";
	}*/

	public String open(long lValue) {
		System.out.println("open <> 666666");
		return "ABC";
	}
	
	public void open(double dValue) {
		System.out.println("open <> 7777");
	}
	
	public String open(String strValue, long lValue) {
		System.out.println("open <> 88888");
		return "ABC";
	}
	
	public String open(float fValue) {
		System.out.println("open <> 9999");
		return "ABC";
	}
	
	public final void checkFinalMethodOverloading(int nValue) {
		System.out.println("checkFinalOverloading() <> 1111111");
	}
	
	public final void checkFinalMethodOverloading(String strValue) {
		System.out.println("checkFinalOverloading() <> 222222");
	}
}
