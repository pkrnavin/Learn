package com.opentest.test.main;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;

import com.opentest.test.bean.UserBean;

public class JDBCODBCMSAccessDatabase {

	/*
	 * TODO: first NIIT, java program adds, MSAccess Database connect, thinks, 
	 *   so to try getConnection, INSERT VALUES, SELECT query to get VALUES 
	 *   
	 * Note:
	 * - from below link, in control panel, to settings adds, 
	 *    of `Data source name` to create, MSAccess Database file to adds, in respective folder  
	 *    (i.e. ODBC adds, thinks); 
	 * https://www.roseindia.net/jdbc/jdbc-odbc.shtml
	 * - from below link, in MSAccess to `CREATE TABLE` 
	 * https://www.tutorialspoint.com/ms_access/ms_access_create_tables.htm
	 * 
	 */
	

	/**
	 * get database connection 
	 * 
	 * @return
	 * @throws Exception
	 */
	public static Connection getConnection() throws Exception {
		Connection con = null;
		
		try {
			/* commented; from JAVA 8, jdbc odbc not available thinks; below throws `ClassNotFoundException`; so from link below to tries
			Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
			
			// below DATABASE_URL of `jdbc:odbc:<DATA_SOURCE_NAME>`, in control panel adds 
			con = DriverManager.getConnection("jdbc:odbc:database_test_datasourcename", "", "");*/
			
			Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
			
			// in DATABASE URL, file path to adds 
			con = DriverManager.getConnection("jdbc:ucanaccess://D:/Learn/Projects/Test/MSAccessDatabaseTest/msaccess_database_test.mdb", "", "");
		} catch(Exception e) {
			throw e;
		} finally {
		}
		
		return con;
	}

	/****** From `LearnUI` adds, below ******/
	
	public static boolean close(Connection conn){
		try{
			if(conn != null )
				conn.close();
		}catch(Exception e){
			System.out.println("Exception while closing Connection: "+e.getMessage());
			e.printStackTrace();
			return false;
		}
		return true;
	}
	
	public static boolean close(PreparedStatement sta){
		try{
			if(sta != null )
				sta.close();
		}catch(Exception e){
			System.out.println("Exception while closing Statement: "+e.getMessage());
			e.printStackTrace();
			return false;
		}
		return true;
	}
	
	public static boolean close(ResultSet rst){
		try{
			if(rst != null )
				rst.close();
		}catch(Exception e){
			System.out.println("Exception while closing ResultSet: "+e.getMessage());
			e.printStackTrace();
			return false;
		}
		return true;
	}
	
	/******/
	
	/**
	 * to insert user 
	 * 
	 * @param con
	 * @param userBean
	 * @throws Exception
	 */
	public void insertUser(Connection con, UserBean userBean) throws Exception {
		StringBuilder sbQuery = new StringBuilder();
		
		PreparedStatement pstmt = null;
		
		Date date = null;
		
		try {
			sbQuery.append("INSERT INTO user_master (user_name, full_name, password, created_by, created_on) VALUES (?, ?, ?, ?, ?) ");
			
			date = new Date();
			
			pstmt = con.prepareStatement(sbQuery.toString());
			pstmt.setString(1, userBean.getUserName());
			pstmt.setString(2, userBean.getFullName());
			pstmt.setString(3, userBean.getPassword());
			pstmt.setInt(4, userBean.getCreatedBy());
			pstmt.setDate(5, new java.sql.Date(date.getTime()));
			
			pstmt.executeUpdate();
			
		} catch (Exception e) {
			throw e;
		} finally {
			close(pstmt);
			pstmt = null;
			
			sbQuery.setLength(0);
			sbQuery = null;
		}
	}
	
	/**
	 * to print users 
	 * 
	 * @param con
	 * @throws Exception
	 */
	public void printUsers(Connection con) throws Exception {
		PreparedStatement pstmt = null;
		ResultSet rst = null;
		
		String strQuery = "";
		
		int i = 0;
		
		try {
			strQuery = "SELECT * FROM user_master";
			
			pstmt = con.prepareStatement(strQuery);
			rst = pstmt.executeQuery();
			while ( rst.next() ) {
				System.out.println("--------- ROW <> i: "+i+" -----------");
				System.out.println("user_id: "+rst.getInt("user_id"));
				System.out.println("user_name: "+rst.getString("user_name"));
				System.out.println("full_name: "+rst.getString("full_name"));
				System.out.println("password: "+rst.getString("password"));
				System.out.println("created_by: "+rst.getInt("created_by"));
				System.out.println("created_on: "+rst.getTimestamp("created_on"));
				System.out.println("modified_by: "+rst.getInt("modified_by"));
				System.out.println("modified_on: "+rst.getTimestamp("modified_on"));
				
				i = i + 1;
				System.out.println("-----------------------");
			}
			
		} catch (Exception e) {
			throw e;
		} finally {
			close(rst);
			rst = null;
			close(pstmt);
			pstmt = null;
			
			strQuery = null;
		}
	}
	
	/**
	 * main function, to add, INSERT VALUES in DATABASE TABLE, SELECT get data; to call in the function 
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		Connection con = null;
		
		UserBean userBean = null;
		
		JDBCODBCMSAccessDatabase jdbcodbcmsAccessDatabase = null;
		
		try {
			System.out.println("main <> 111111");
			jdbcodbcmsAccessDatabase = new JDBCODBCMSAccessDatabase();
			
			// gets connection 
			con = getConnection();
			
			System.out.println("con: "+con);
			
			// bean value adds 
			userBean = new UserBean();
			userBean.setUserName("admin");
			userBean.setFullName("Admin");
			userBean.setPassword("admin");
			userBean.setCreatedBy(1);
			// to insert user 
			jdbcodbcmsAccessDatabase.insertUser(con, userBean);
			
			// to print VALUES in the ROW 
			jdbcodbcmsAccessDatabase.printUsers(con);
			
			
			jdbcodbcmsAccessDatabase = null;
		} catch(Exception e) {
			System.out.println("Exception in main: "+e.getMessage());
			e.printStackTrace();
		} finally {
			close(con);
			con = null;
		}
	}
}
