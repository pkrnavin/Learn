package com.opentest.test.main;

public class StringPassValueMethod {

	/**
	 * to checking, to try, `String` variable to pass in methods, 
	 *   call by value OR call by reference to cheking 
	 * (i.e. value change in child method, reflects in parent method passing value, to hecking to try) 
	 * 
	 * @param args
	 */
	
	/**
	 * to chekcing `String` immutable, `StringBuilder` mutable 
	 *   value passing change in child method reflects to hecking 
	 * `String` - pass by value (i.e. value change in child method, not reflects in parent calling place) 
	 * `StringBuilder` - pass by references (i.e. value change in child method, reflects in parent calling place)
	 * 
	 * @throws Exception
	 */
	public void callA() throws Exception {
		String strName = "AAA";
		StringBuilder sbName = new StringBuilder();
		
		try {
			sbName.append(strName);
			
			System.out.println("Before callB <> String <> strName: "+strName);
			System.out.println("Before callB <> StringBuilder <> sbName: "+sbName.toString());
			
			callB(strName, sbName);
			
			System.out.println("After callB <> String <> strName: "+strName);
			System.out.println("After callB <> StringBuilder <> sbName: "+sbName.toString());
		} catch(Exception e) {
			throw e;
		}
	}
	
	/**
	 * `String` immutable, `StringBuilder` mutable value passing, 
	 *   in child method value change, reflects in parent calling place to cheking verify 
	 * 
	 * @param strName
	 * @param sbName
	 */
	public void callB(String strName, StringBuilder sbName) {
		
		try {
			strName = strName + "BBB";
			sbName.append(strName);
			
			System.out.println("callB <> String <> strName: "+strName);
			System.out.println("callB <> StringBuilder <> sbName: "+sbName.toString());	
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	public static void main(String[] args) {
		StringPassValueMethod stringPassValueMethod = null;
				
		try {
			stringPassValueMethod = new StringPassValueMethod();
			
			stringPassValueMethod.callA();
			
			stringPassValueMethod = null;
		} catch(Exception e) {
			System.out.println("Exeption in main: "+e.getMessage());
			e.printStackTrace();
		}
	}
}
